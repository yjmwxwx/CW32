	@cw32L010
	@编译器ARM-NONE-EABI

	.thumb
	.syntax unified
	.section .text
vectors:
	.word zhanding
	.word kaishi + 1
	.word _nmi	+1
	.word _Hard_Fault +1
	.word 0
	.word 0
	.word 0
	.word 0
	.word 0
	.word 0
	.word 0
	.word _svc_handler +1
	.word 0
	.word 0
	.word _pendsv_handler +1
	.word _systickzhongduan +1  @ 15
	.word aaa +1                @ 0		WDT
	.word aaa +1                @ 1		LVD
	.word aaa +1                @ 2	
	.word aaa +1                @ 3		FLASHRAM
	.word aaa +1                @ 4		RCC
	.word aaa +1         	    @ 5		GPIOA
	.word aaa +1                @ 6		GPIOB
	.word aaa +1                @ 7		GPIOC
	.word aaa +1                @ 8
	.word aaa +1                @ 9
	.word aaa +1                @ 10
	.word aaa +1                @ 11
	.word aaa +1                @ 12	ADC
	.word aaa +1                @ 13	ATIM
	.word aaa +1                @ 14	VC1
	.word aaa +1                @ 15	VC2
	.word aaa +1                @ 16	GTIM
	.word aaa +1                @ 17
	.word aaa +1                @ 18
	.word aaa +1                @ 19
	.word aaa +1                @ 20	BTIM1
	.word aaa +1                @ 21	BTIM2
	.word aaa +1                @ 22	BTIM3
	.word aaa +1                @ 23	I2C
	.word aaa +1                @ 24
	.word aaa +1                @ 25	SPI
	.word aaa +1                @ 26
	.word aaa +1                @ 27	UART1
	.word aaa +1		    @ 28	UART2
	.word aaa +1		    @ 29
	.word aaa +1		    @ 30	AWT
 	.word aaa +1		    @ 31
kaishi:
	bkpt # 1


__shi_zhong:
	ldr r0, = 0x40004000
	ldr r1, = 0x240022	
	str r1, [r0, # 0x1c]	@SYSCTRL_HSE
	ldr r1, = 0x5a5a0003	@开HES
	str r1, [r0, # 0x04]
deng_hse:
	ldr r1, [r0, # 0x1c]
	lsls r1, r1, # 12
	bpl deng_hse
	ldr r1, = 0x5a5a0001
	str r1, [r0]		@切换到HSE时钟
	ldr r1, = 0x5a5a0002
	str r1, [r0, # 0x04]	@关闭HSI时钟
	
	ldr r1, =  0x5a5a0030
	str r1, [r0, # 0x30]	@开pa pb时钟
	ldr r1, = 0x5a5a0005
	str r1, [r0, # 0x38]	@



__pa_chu_shi_hua:
        ldr r0, = 0x48000000 @pa
        ldr r1, = 0x187
        str r1, [r0]		@GPIOx_DIR GPIO 输入输出方向寄存器
        ldr r1, = 0x187
        str r1, [r0, # 0x1c]	@GPIOx_ANALOG GPIO 模拟数字配置寄存器
	
        str r1, [r0, # 0x14]    @8-15
	ldr r1, = 0x330000
        str r1, [r0, # 0x18]    @0-7

__pb_chu_shi_hua:
        ldr r0, = 0x48000100 @pb
        movs r1, #  0xff
        str r1, [r0]
        movs r1, # 0x7f
        str r1, [r0, # 0x1c]

	str r1, [r0, # 0x14]    @8-15
        str r1, [r0, # 0x18]    @0-7
__spi_chu_shi_hua:
	ldr r0, = 0x40000800
	ldr r1, = 0x10703	@0x10773	@8位，主机单发模式
	str r1, [r0]
	movs r1, # 0x01
	str r1, [r0, # 0x04]	@开SPI

	bl __lcd_chushihua
	bkpt # 2
	
	bl __lcd_xie_ming_ling
	movs r0, # 0x2a        
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0x00
	bl __xie_spi1
        movs r0, # 0x00
	bl __xie_spi1
        movs r0, # 0x00
	bl __xie_spi1
	movs r0, # 79
	bl __xie_spi1

        bl __lcd_xie_ming_ling
	movs r0, # 0x2b
        bl __xie_spi1
        bl __lcd_xie_shu_ju
        movs r0, # 0x00
        bl __xie_spi1
        movs r0, # 0x00
        bl __xie_spi1
        movs r0, # 0x00
	bl __xie_spi1
        movs r0, # 159
	bl __xie_spi1

	
        bl __lcd_xie_ming_ling
	movs r0, # 0x2c
        bl __xie_spi1
        bl __lcd_xie_shu_ju


	ldr r6, = 30684
	movs r5, # 0
ting:	
        movs r0, # 0xff
        bl __xie_spi1
        movs r0, # 0x00
        bl __xie_spi1
	subs r6, r6, # 1
	bne ting
	bkpt # 1
	b ting
	

__lcd_chushihua:
	push {r0-r2,lr}
	ldr r0,  = 0x48000000
	movs r1, # 0x40
	str r1, [r0, 0x5c]            @RST=1
	ldr r2, = 0x1ffff
	bl __lcd_yanshi

	str r1, [r0, 0x58]            @RST=0
	ldr r2, = 0x1ffff
	bl __lcd_yanshi

	str r1, [r0, # 0x5c]            @RST=1
	ldr r2, = 0x1ffff
	bl __lcd_yanshi

	ldr r2, = 0x1ffff
	bl __lcd_yanshi

	bl __lcd_xie_ming_ling
	movs r0, # 0x01		@软件复位
	bl __xie_spi1
	ldr r2, = 0x1ffff
	bl __lcd_yanshi
	movs r0, # 0x11		@退出休眠
	bl __xie_spi1
	ldr r2, = 0x1ffff
	bl __lcd_yanshi

	
	movs r0, # 0xb1		@设置帧率
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0x01
	bl __xie_spi1
	movs r0, # 0x2c
	bl __xie_spi1
	movs r0, # 0x2d
	bl __xie_spi1

	bl __lcd_xie_ming_ling
	movs r0, # 0xb2		@设置帧率
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0x01
	bl __xie_spi1
	movs r0, # 0x2c
	bl __xie_spi1
	movs r0, # 0x2d
	bl __xie_spi1


	bl __lcd_xie_ming_ling
	movs r0, # 0xb3		@设置帧率
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0x01
	bl __xie_spi1
	movs r0, # 0x2c
	bl __xie_spi1
	movs r0, # 0x2d
	bl __xie_spi1
	movs r0, # 0x01
	bl __xie_spi1
	movs r0, # 0x2c
	bl __xie_spi1
	movs r0, # 0x2d
	bl __xie_spi1

	bl __lcd_xie_ming_ling
	movs r0, # 0xb4		@关闭外部振荡器
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0x07
	bl __xie_spi1

	bl __lcd_xie_ming_ling
	movs r0, # 0xc0		@设置电源控制1
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0xa2
	bl __xie_spi1
	movs r0, # 0x02
	bl __xie_spi1
	movs r0, # 0x84
	bl __xie_spi1

	bl __lcd_xie_ming_ling
	movs r0, # 0xc1		@设置电源控制2
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0xc5
	bl __xie_spi1

	bl __lcd_xie_ming_ling
	movs r0, # 0xc2		@设置电源控制3
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0x0a
	bl __xie_spi1
	movs r0, # 0x00
	bl __xie_spi1

	bl __lcd_xie_ming_ling
	movs r0, # 0xc3		@设置电源控制4
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0x8a
	bl __xie_spi1
	movs r0, # 0x2a
	bl __xie_spi1

	bl __lcd_xie_ming_ling
	movs r0, # 0xc4		@设置电源控制5
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0x8a
	bl __xie_spi1
	movs r0, # 0xee
	bl __xie_spi1

	bl __lcd_xie_ming_ling
	movs r0, # 0xc5
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0x0e
	bl __xie_spi1

	bl __lcd_xie_ming_ling
	movs r0, # 0x36
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0xc8
	bl __xie_spi1

	bl __lcd_xie_ming_ling
	movs r0, # 0x3a
	bl __xie_spi1
	bl __lcd_xie_shu_ju
	movs r0, # 0x05
	
	bl __lcd_xie_ming_ling
	movs r0, # 0x29
	bl __xie_spi1
	pop {r0-r2,pc}

__lcd_yanshi:
	subs r2, r2, # 1
	bne __lcd_yanshi
	bx lr

__xie_spi1:
        push {r1-r2}
        ldr r1, = 0x40000800
__deng_huan_chong_kong:
        ldr r2, [r1, # 0x14]
        lsls r2, r2, # 31
        bpl __deng_huan_chong_kong
	str r0, [r1, # 0x1c]
__deng_huan_chong_kong1:
        ldr r2, [r1, # 0x14]
        lsls r2, r2, # 31
        bpl __deng_huan_chong_kong1
__busy_zong_xian_mang:
        ldr r2, [r1, # 0x14]
        lsls r2, r2, # 23
        bmi __busy_zong_xian_mang
        pop {r1-r2}
        bx lr
__lcd_xie_ming_ling:
	push {r0-r1}
	ldr r0, = 0x48000000
	movs r1, # 0x08
	str r1, [r0, # 0x58]            @0写命令
	pop {r0-r1}
	bx lr
__lcd_xie_shu_ju:
        push {r0-r1}
        ldr r0, = 0x48000000
        movs r1, # 0x08
	str r1, [r0, # 0x5c]            @1写数据
        pop {r0-r1}
        bx lr



_chufa:						@软件除法
	@ r0 除以 r1 等于 商(r0)
	push {r1-r4,lr}
	cmp r0, # 0
	beq _chufafanhui
	cmp r1, # 0
	beq _chufafanhui
	mov r2, r0
	movs r3, # 1
	lsls r3, r3, # 31
	movs r0, # 0
	mov r4, r0
_chufaxunhuan:
	lsls r2, r2, # 1
	adcs r4, r4, r4
	cmp r4, r1
	bcc _chufaweishubudao0
	adds r0, r0, r3
	subs r4, r4, r1
_chufaweishubudao0:
	lsrs r3, r3, # 1
	bne _chufaxunhuan
_chufafanhui:
	pop {r1-r4,pc}
	.ltorg



	

_nmi:
_Hard_Fault:
_svc_handler:
_pendsv_handler:	
_systickzhongduan:
aaa:
	bx lr
	
	.section .data
	.equ zhanding,	0x20000100
	.equ asciibiao,	0x20000500

